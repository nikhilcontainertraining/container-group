docker run -it \
           --network container-group_default \
           --name container-group-mysql-con-1 \
           -e MYSQL_ROOT_PASSWORD=Mig5@mig5 \
           -u root \
           -d \
           mysql

---

gradle clean build && docker build -t be-dr-img:v1 .
docker run --rm  \
            --network container-group_default  \
            -v joke_vol_be:/be-app/joke_vol  \
            -v "/Users/nikhilhiremath/Documents/Engineering/CKAD/Docker/apps/workspace/container-group/container_meta_data:/be-app"  \
            -p 8080:8080  \
            --name container-group-be-con-1 be-dr-img:v1


---

gradle clean build && docker build -t fe-dr-img:v1 .
docker run --rm \
            --network container-group_default \
            -v joke_vol_fe:/fe-app/joke_vol \
            -v "/Users/nikhilhiremath/Documents/Engineering/CKAD/Docker/apps/workspace/container-group/container_meta_data:/fe-app" \
            -p 8081:8081 \
            --name container-group-fe-con-1 fe-dr-img:v1

--------------
IMPORTANT NOTE
--------------

- If volumes are created via docker compose then
- declare each the volume under "volumes" section
- named volumes need to have relative path hence "./" prefix is required
- bind mount already has absolute path hence relative path is not required

- backup dir
    - since our api is copying the joke/message file into backup dir from "joke_vol" ==> "joke_vol_be"(named vol)
    - and "backup" directory is directly referred to load the file it is necessary to be created manually in BIND mount location
    - HENCE "backup" dir @ ""/Users/nikhilhiremath/Documents/Engineering/CKAD/Docker/apps/workspace/container-group/container_meta_data/backup" needs to be created

- Dir/Folders that are automatically created
    - logs - created by log4j
    - lib - created by docker based on anonymous volume definition in application "DockerFile"
    - joke_vol - created by docker based on named volume definition in "docker-compose"

